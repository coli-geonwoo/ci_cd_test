name: backend cicd dev

on:
  push:
    branches: [ "new-ci-workflow" ]
  #    paths:
  #      - backend/**
  pull_request:
    branches: [ "new-ci-workflow" ]
#    paths:
#      - backend/**

env:
  DOCKERHUB_REPOSITORY: demo-app
  DOCKER_CONTAINER_NAME: demo

jobs:
  build-docker-push:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository:  ${{ github.repository }}
          ref: new-ci-workflow

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build And BootJar with Gradle Wrapper
        run: |
          ./gradlew build
          ./gradlew bootJar
          echo "========================= jar 있나?"
          cd ./build/libs/
          ls

      #      - name: BootJar with Gradle Wrapper
      #        run: |
      #          ./gradlew bootJar
      #          echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< "
      #          pwd

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build --platform linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }} -f Dockerfile . --push



  docker-pull-deploy:

    needs: build-docker-push
    runs-on: self-hosted

    steps:
      - name: Pull Docker image And Run
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker image prune -a -f
          docker pull --platform linux/arm64 ${{ secrets.DOCKER_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}
          docker stop $DOCKER_CONTAINER_NAME || true
          docker rm $DOCKER_CONTAINER_NAME || true
          echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
          pwd
          echo "===================================="
          ls -al
          docker run --platform linux/arm64 --name $DOCKER_CONTAINER_NAME -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}

##      - name: Run new Docker container
##        run: |
##          docker stop $DOCKER_CONTAINER_NAME || true
##          docker rm $DOCKER_CONTAINER_NAME || true
##          echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
##          pwd
##          echo "===================================="
##          ls -al
##          docker run --platform linux/arm64 --name $DOCKER_CONTAINER_NAME -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}
##          docker run -d --platform linux/arm64 --name $DOCKER_CONTAINER_NAME -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}
